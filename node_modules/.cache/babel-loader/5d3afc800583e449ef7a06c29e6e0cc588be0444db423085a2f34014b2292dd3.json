{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/EcommerceDuplicate/myapp/src/components/CartSummary/index.js\";\nimport { Component } from \"react\";\nimport CartContext from \"../../context/CartContext\";\nimport Popup from \"reactjs-popup\";\nimport PaymentOptions from \"../PaymentOptions\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst listOfOptions = [{\n  id: \"UPI\",\n  value: \"UPI\",\n  displayText: \"UPI\"\n}, {\n  id: \"NetBanking\",\n  value: \"NetBanking\",\n  displayText: \"Net Banking\"\n}, {\n  id: \"Wallet\",\n  value: \"Wallet\",\n  displayText: \"Wallet\"\n}, {\n  id: \"Card\",\n  value: \"Card\",\n  displayText: \"Card\"\n}, {\n  id: \"COD\",\n  value: \"COD\",\n  displayText: \"Cash On Delivery\"\n}];\nclass CartSummary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isPlaced: false\n    };\n  }\n  render() {\n    const {\n      isPlaced\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CartContext.Consumer, {\n      children: value => {\n        const {\n          cartList,\n          isConfirm\n        } = value;\n        let totalBill = 0;\n        cartList.forEach(eachItem => totalBill += eachItem.price * eachItem.quantity);\n        const UserPaymentOption = option => {};\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"order-total\",\n            children: [\"Order Total: Rs\", totalBill]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-in-cart\",\n            children: [cartList.length, \" Items in cart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              modal: true,\n              className: \"popup-overlay\",\n              trigger: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"check-out\",\n                children: \"Check out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 28\n              }, this),\n              position: \"center center\",\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"payment-list\",\n                children: listOfOptions.map(item => /*#__PURE__*/_jsxDEV(PaymentOptions, {\n                  details: item,\n                  UserPaymentOption: UserPaymentOption\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"bill\",\n                children: \"Total Summary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"bill\",\n                children: [\"No.of items: \", cartList.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"bill\",\n                children: [\"Total Bill: \", totalBill]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"confirmBtn\",\n                type: \"button\",\n                onClick: UserPaymentOption,\n                children: \"Confirm Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), isConfirm && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"success-message\",\n                children: \"Your order has been placed successfully\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default CartSummary;\n\n//   addCartItem = product => {\n//     const {cartList} = this.state\n//     const productObject = cartList.find(\n//       eachCartItem => eachCartItem.id === product.id,\n//     )\n\n//     if (productObject) {\n//       this.setState(prevState => ({\n//         cartList: prevState.cartList.map(eachCartItem => {\n//           if (productObject.id === eachCartItem.id) {\n//             const updatedQuantity = eachCartItem.quantity + product.quantity\n\n//             return {...eachCartItem, quantity: updatedQuantity}\n//           }\n\n//           return eachCartItem\n//         }),\n//       }))\n//     } else {\n//       const updatedCartList = [...cartList, product]\n\n//       this.setState({cartList: updatedCartList})\n//     }\n//   }","map":{"version":3,"names":["Component","CartContext","Popup","PaymentOptions","jsxDEV","_jsxDEV","listOfOptions","id","value","displayText","CartSummary","constructor","args","state","isPlaced","render","Consumer","children","cartList","isConfirm","totalBill","forEach","eachItem","price","quantity","UserPaymentOption","option","className","fileName","_jsxFileName","lineNumber","columnNumber","length","modal","trigger","position","map","item","details","type","onClick"],"sources":["/home/workspace/reactjs/coding-practices/EcommerceDuplicate/myapp/src/components/CartSummary/index.js"],"sourcesContent":["import { Component } from \"react\";\n\nimport CartContext from \"../../context/CartContext\";\n\nimport Popup from \"reactjs-popup\";\n\nimport PaymentOptions from \"../PaymentOptions\";\n\nimport \"./index.css\";\n\nconst listOfOptions = [\n  { id: \"UPI\", value: \"UPI\", displayText: \"UPI\" },\n  { id: \"NetBanking\", value: \"NetBanking\", displayText: \"Net Banking\" },\n  { id: \"Wallet\", value: \"Wallet\", displayText: \"Wallet\" },\n  { id: \"Card\", value: \"Card\", displayText: \"Card\" },\n  { id: \"COD\", value: \"COD\", displayText: \"Cash On Delivery\" },\n];\n\nclass CartSummary extends Component {\n  state = { isPlaced: false };\n  render() {\n    const { isPlaced } = this.state;\n    return (\n      <CartContext.Consumer>\n        {(value) => {\n          const { cartList, isConfirm } = value;\n          let totalBill = 0;\n          cartList.forEach(\n            (eachItem) => (totalBill += eachItem.price * eachItem.quantity)\n          );\n\n          const UserPaymentOption = (option) => {};\n          return (\n            <div>\n              <h1 className=\"order-total\">Order Total: Rs{totalBill}</h1>\n              <p className=\"item-in-cart\">{cartList.length} Items in cart</p>\n              <div>\n                <Popup\n                  modal\n                  className=\"popup-overlay\"\n                  trigger={<button className=\"check-out\">Check out</button>}\n                  position=\"center center\"\n                >\n                  <ul className=\"payment-list\">\n                    {listOfOptions.map((item) => (\n                      <PaymentOptions\n                        key={item.id}\n                        details={item}\n                        UserPaymentOption={UserPaymentOption}\n                      />\n                    ))}\n                  </ul>\n                  <p className=\"bill\">Total Summary:</p>\n                  <p className=\"bill\">No.of items: {cartList.length}</p>\n                  <p className=\"bill\">Total Bill: {totalBill}</p>\n                  <button\n                    className=\"confirmBtn\"\n                    type=\"button\"\n                    onClick={UserPaymentOption}\n                  >\n                    Confirm Order\n                  </button>\n                  {isConfirm && (\n                    <p className=\"success-message\">\n                      Your order has been placed successfully\n                    </p>\n                  )}\n                </Popup>\n              </div>\n            </div>\n          );\n        }}\n      </CartContext.Consumer>\n    );\n  }\n}\n\nexport default CartSummary;\n\n//   addCartItem = product => {\n//     const {cartList} = this.state\n//     const productObject = cartList.find(\n//       eachCartItem => eachCartItem.id === product.id,\n//     )\n\n//     if (productObject) {\n//       this.setState(prevState => ({\n//         cartList: prevState.cartList.map(eachCartItem => {\n//           if (productObject.id === eachCartItem.id) {\n//             const updatedQuantity = eachCartItem.quantity + product.quantity\n\n//             return {...eachCartItem, quantity: updatedQuantity}\n//           }\n\n//           return eachCartItem\n//         }),\n//       }))\n//     } else {\n//       const updatedCartList = [...cartList, product]\n\n//       this.setState({cartList: updatedCartList})\n//     }\n//   }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}